name: CI/CD Pipeline

trigger:
  branches:
    - main  # Update with the branch you want to trigger the pipeline

variables:
  rejectedFolder: 'C:\Users\Admin\Documents\trinath\devops\POC\rejected'
  githubToken: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication

jobs:
- job: BuildAndPublish
  displayName: 'Build and Publish Artifacts'
  pool:
    vmImage: 'windows-latest'  # Update with the appropriate agent image

  steps:
  - checkout: self

  - powershell: |
      # Set the path to your local project folder
      $projectPath = 'C:\Users\Admin\Documents\trinath\devops\POC'

      # Navigate to the project directory
      cd $projectPath

      # Build the project (replace with your actual build script)
      # Assuming a .NET Core project
      dotnet build --configuration Release

      # Publish artifacts to GitHub Packages
      dotnet pack --configuration Release
      dotnet nuget push "bin\Release\*.nupkg" --source "https://nuget.pkg.github.com/ythrinathreddy/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}
    displayName: 'Build and Publish'

- job: HandleFailures
  displayName: 'Handle Failures and Notify'
  dependsOn: BuildAndPublish
  pool:
    vmImage: 'windows-latest'  # Update with the appropriate agent image

  steps:
  - checkout: self
- powershell: |
      # Your script to handle failures and trigger notifications

      # Set the path to the rejected folder
      $rejectedFolder = 'C:\Users\Admin\Documents\trinath\devops\POC\rejected'
  - # Check if the previous step failed
      if ($LASTEXITCODE -ne 0) {
          # If the build failed, move artifacts to the rejected folder
          Write-Host "Moving artifacts to the rejected folder"
          Move-Item -Path "$(System.DefaultWorkingDirectory)\bin\Release\*.nupkg" -Destination $rejectedFolder -ErrorAction SilentlyContinue
          
          # Trigger a notification (replace with your actual notification command)
          Write-Host "Triggering notification"
          # Replace the following line with the actual notification command
          # For example, sending an email or using a messaging service
          Send-Notification -Message "Build failed! Artifacts moved to $rejectedFolder"
      }
    displayName: 'Handle Failures and Notify'
